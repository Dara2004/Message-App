{"ast":null,"code":"var _jsxFileName = \"/Users/daranguyen/Desktop/UBC/Courses/CPSC436I/assignments/a2/MessageApp/message-app/src/components/ChatMessages.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport ChatMessage from \"../containers/ChatMessage\"; //parent: ChatWindow\n\nconst ChatMessages = ({\n  messages\n}) => {\n  const el = useRef(null); //direct dom manipulation, returns a pointer/ref to the phisical DOM element\n\n  useEffect(() => {\n    // componentDidMount() = component rendered, componentWillUpdate() if things in [ ] changes\n    //if nothing is passed to 2nd argument = undefined -> callback is called on every update\n    el.current.scrollTop = el.current.scrollHeight;\n  }, [messages]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-messages\",\n    ref: el,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, messages.map((m, idx) => /*#__PURE__*/React.createElement(ChatMessage, {\n    message: m,\n    index: idx,\n    key: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ChatMessages;","map":{"version":3,"sources":["/Users/daranguyen/Desktop/UBC/Courses/CPSC436I/assignments/a2/MessageApp/message-app/src/components/ChatMessages.js"],"names":["React","useEffect","useRef","ChatMessage","ChatMessages","messages","el","current","scrollTop","scrollHeight","map","m","idx"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,2BAAxB,C,CAEA;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrC,QAAMC,EAAE,GAAGJ,MAAM,CAAC,IAAD,CAAjB,CADqC,CACZ;;AACzBD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACAK,IAAAA,EAAE,CAACC,OAAH,CAAWC,SAAX,GAAuBF,EAAE,CAACC,OAAH,CAAWE,YAAlC;AACD,GAJQ,EAIN,CAACJ,QAAD,CAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,GAAG,EAAEC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,CAACK,GAAT,CAAa,CAACC,CAAD,EAAIC,GAAJ,kBACZ,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,CAAtB;AAAyB,IAAA,KAAK,EAAEC,GAAhC;AAAqC,IAAA,GAAG,EAAEA,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF;AAOD,CAfD;;AAgBA,eAAeR,YAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport ChatMessage from \"../containers/ChatMessage\";\n\n//parent: ChatWindow\nconst ChatMessages = ({ messages }) => {\n  const el = useRef(null); //direct dom manipulation, returns a pointer/ref to the phisical DOM element\n  useEffect(() => {\n    // componentDidMount() = component rendered, componentWillUpdate() if things in [ ] changes\n    //if nothing is passed to 2nd argument = undefined -> callback is called on every update\n    el.current.scrollTop = el.current.scrollHeight;\n  }, [messages]);\n\n  return (\n    <div className=\"chat-messages\" ref={el}>\n      {messages.map((m, idx) => (\n        <ChatMessage message={m} index={idx} key={idx}></ChatMessage>\n      ))}\n    </div>\n  );\n};\nexport default ChatMessages;\n"]},"metadata":{},"sourceType":"module"}