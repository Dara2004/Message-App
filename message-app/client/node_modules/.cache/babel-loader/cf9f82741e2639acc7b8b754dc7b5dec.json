{"ast":null,"code":"var _jsxFileName = \"/Users/daranguyen/Desktop/UBC/Courses/CPSC436I/assignments/a2/Message-App/message-app/src/containers/ChatInput.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setTypedMessage, sendMessage, updateMessage } from \"../actions\"; //parent: ChatWindow\n\nconst ChatInput = ({\n  typedMessage,\n  activeId,\n  messages,\n  setTypedMessage,\n  sendMessage,\n  updateMessage\n}) => {\n  const handleSubmit = e => {\n    const editing = messages.editing;\n    e.preventDefault(); //to prevent page to reload after form is submitted\n    //if message is new message (not edited)\n\n    if (typedMessage !== \"\") {\n      if (!editing.isEditing) {\n        sendMessage(typedMessage, activeId);\n      } else {\n        updateMessage(typedMessage, activeId);\n      }\n    }\n  };\n\n  const handleChange = e => {\n    setTypedMessage(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"chat-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"chat-input\",\n    onChange: handleChange,\n    value: typedMessage,\n    placeholder: \"Type a message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"input-submit\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Send\"));\n};\n\nconst mapStateToProps = state => {\n  return {\n    typedMessage: state.typedMessage,\n    activeId: state.activeId,\n    messages: state.messages\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setTypedMessage,\n  sendMessage,\n  updateMessage\n})(ChatInput);","map":{"version":3,"sources":["/Users/daranguyen/Desktop/UBC/Courses/CPSC436I/assignments/a2/Message-App/message-app/src/containers/ChatInput.js"],"names":["React","connect","setTypedMessage","sendMessage","updateMessage","ChatInput","typedMessage","activeId","messages","handleSubmit","e","editing","preventDefault","isEditing","handleChange","target","value","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,aAAvC,QAA4D,YAA5D,C,CAEA;;AACA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,YADiB;AAEjBC,EAAAA,QAFiB;AAGjBC,EAAAA,QAHiB;AAIjBN,EAAAA,eAJiB;AAKjBC,EAAAA,WALiB;AAMjBC,EAAAA;AANiB,CAAD,KAOZ;AACJ,QAAMK,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAMC,OAAO,GAAGH,QAAQ,CAACG,OAAzB;AACAD,IAAAA,CAAC,CAACE,cAAF,GAF0B,CAEN;AACpB;;AACA,QAAIN,YAAY,KAAK,EAArB,EAAyB;AACvB,UAAI,CAACK,OAAO,CAACE,SAAb,EAAwB;AACtBV,QAAAA,WAAW,CAACG,YAAD,EAAeC,QAAf,CAAX;AACD,OAFD,MAEO;AACLH,QAAAA,aAAa,CAACE,YAAD,EAAeC,QAAf,CAAb;AACD;AACF;AACF,GAXD;;AAYA,QAAMO,YAAY,GAAIJ,CAAD,IAAO;AAC1BR,IAAAA,eAAe,CAACQ,CAAC,CAACK,MAAF,CAASC,KAAV,CAAf;AACD,GAFD;;AAGA,sBACE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,QAAQ,EAAEP,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,QAAQ,EAAEK,YAFZ;AAGE,IAAA,KAAK,EAAER,YAHT;AAIE,IAAA,WAAW,EAAC,gBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,QAAQ,EAAEG,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,CADF;AAaD,CApCD;;AAsCA,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLZ,IAAAA,YAAY,EAAEY,KAAK,CAACZ,YADf;AAELC,IAAAA,QAAQ,EAAEW,KAAK,CAACX,QAFX;AAGLC,IAAAA,QAAQ,EAAEU,KAAK,CAACV;AAHX,GAAP;AAKD,CAND;;AAQA,eAAeP,OAAO,CAACgB,eAAD,EAAkB;AACtCf,EAAAA,eADsC;AAEtCC,EAAAA,WAFsC;AAGtCC,EAAAA;AAHsC,CAAlB,CAAP,CAIZC,SAJY,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setTypedMessage, sendMessage, updateMessage } from \"../actions\";\n\n//parent: ChatWindow\nconst ChatInput = ({\n  typedMessage,\n  activeId,\n  messages,\n  setTypedMessage,\n  sendMessage,\n  updateMessage,\n}) => {\n  const handleSubmit = (e) => {\n    const editing = messages.editing;\n    e.preventDefault(); //to prevent page to reload after form is submitted\n    //if message is new message (not edited)\n    if (typedMessage !== \"\") {\n      if (!editing.isEditing) {\n        sendMessage(typedMessage, activeId);\n      } else {\n        updateMessage(typedMessage, activeId);\n      }\n    }\n  };\n  const handleChange = (e) => {\n    setTypedMessage(e.target.value);\n  };\n  return (\n    <form className=\"chat-form\" onSubmit={handleSubmit}>\n      <input\n        className=\"chat-input\"\n        onChange={handleChange}\n        value={typedMessage}\n        placeholder=\"Type a message\"\n      />\n      <button className=\"input-submit\" onSubmit={handleSubmit}>\n        Send\n      </button>\n    </form>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    typedMessage: state.typedMessage,\n    activeId: state.activeId,\n    messages: state.messages,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setTypedMessage,\n  sendMessage,\n  updateMessage,\n})(ChatInput);\n"]},"metadata":{},"sourceType":"module"}