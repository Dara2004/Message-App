{"ast":null,"code":"var _jsxFileName = \"/Users/daranguyen/Desktop/UBC/Courses/CPSC436I/assignments/a2/MessageApp/message-app/src/containers/ChatMessage.js\";\nimport React from \"react\";\nimport { useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setTypedMessage, setEditing, deleteMessage } from \"../actions\"; //parent: ChatMessages\n\nconst ChatMessage = ({\n  activeId,\n  message,\n  index,\n  contacts,\n  setTypedMessage,\n  setEditing,\n  deleteMessage\n}) => {\n  const [isDeleteVisible, setDeleteVisible] = useState(false);\n  const {\n    text,\n    is_user\n  } = message;\n  const del = useRef(null);\n\n  const handleOnclick = e => {\n    console.log(e.currentTarget);\n    console.log(del.current);\n\n    if (e.target === del.current) {\n      return;\n    }\n\n    if (message.is_user) {\n      //only allow update if it's user's message\n      setTypedMessage(message.text); //to edit message\n\n      setEditing(index);\n    }\n  };\n\n  const handleHover = e => {\n    e.preventDefault();\n\n    if (message.is_user) {\n      setDeleteVisible(true);\n    }\n  };\n\n  const handleUnhover = e => {\n    e.preventDefault();\n\n    if (message.is_user) {\n      setDeleteVisible(false);\n    }\n  };\n\n  const handleDelete = e => {\n    setDeleteVisible(false);\n    e.preventDefault();\n\n    if (message.is_user) {\n      deleteMessage(index, activeId);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"chat-pic\",\n    src: contacts[activeId].pic,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: `chat ${is_user ? \"is-user\" : \"\"}`,\n    onClick: handleOnclick,\n    onMouseEnter: handleHover,\n    onMouseLeave: handleUnhover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, text, isDeleteVisible ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"delete-btn\",\n    onClick: handleDelete,\n    ref: del,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"x\") : null)));\n};\n\nconst mapStateToProps = state => {\n  return {\n    activeId: state.activeId,\n    contacts: state.contacts\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setTypedMessage,\n  setEditing,\n  deleteMessage\n})(ChatMessage);","map":{"version":3,"sources":["/Users/daranguyen/Desktop/UBC/Courses/CPSC436I/assignments/a2/MessageApp/message-app/src/containers/ChatMessage.js"],"names":["React","useState","useRef","connect","setTypedMessage","setEditing","deleteMessage","ChatMessage","activeId","message","index","contacts","isDeleteVisible","setDeleteVisible","text","is_user","del","handleOnclick","e","console","log","currentTarget","current","target","handleHover","preventDefault","handleUnhover","handleDelete","pic","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setTypedMessage, setEditing, deleteMessage } from \"../actions\";\n//parent: ChatMessages\nconst ChatMessage = ({\n  activeId,\n  message,\n  index,\n  contacts,\n  setTypedMessage,\n  setEditing,\n  deleteMessage,\n}) => {\n  const [isDeleteVisible, setDeleteVisible] = useState(false);\n  const { text, is_user } = message;\n  const del = useRef(null);\n\n  const handleOnclick = (e) => {\n    console.log(e.currentTarget);\n    console.log(del.current);\n    if (e.target === del.current) {\n      return;\n    }\n    if (message.is_user) {\n      //only allow update if it's user's message\n      setTypedMessage(message.text); //to edit message\n      setEditing(index);\n    }\n  };\n  const handleHover = (e) => {\n    e.preventDefault();\n    if (message.is_user) {\n      setDeleteVisible(true);\n    }\n  };\n  const handleUnhover = (e) => {\n    e.preventDefault();\n    if (message.is_user) {\n      setDeleteVisible(false);\n    }\n  };\n\n  const handleDelete = (e) => {\n    setDeleteVisible(false);\n    e.preventDefault();\n    if (message.is_user) {\n      deleteMessage(index, activeId);\n    }\n  };\n  return (\n    <>\n      <div>\n        <span>\n          <img className=\"chat-pic\" src={contacts[activeId].pic} alt=\"\" />\n        </span>\n        <span\n          className={`chat ${is_user ? \"is-user\" : \"\"}`}\n          onClick={handleOnclick}\n          onMouseEnter={handleHover}\n          onMouseLeave={handleUnhover}\n        >\n          {text}\n          {isDeleteVisible ? (\n            <button className=\"delete-btn\" onClick={handleDelete} ref={del}>\n              x\n            </button>\n          ) : null}\n        </span>\n      </div>\n    </>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    activeId: state.activeId,\n    contacts: state.contacts,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setTypedMessage,\n  setEditing,\n  deleteMessage,\n})(ChatMessage);\n"]},"metadata":{},"sourceType":"module"}