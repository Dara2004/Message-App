{"ast":null,"code":"var _jsxFileName = \"/Users/daranguyen/Desktop/UBC/Courses/CPSC436I/assignments/a2/MessageApp/message-app/src/containers/ChatMessage.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setTypedMessage, setEditing } from \"../actions\"; //parent: ChatMessages\n\nconst ChatMessage = ({\n  messages,\n  activeId,\n  message,\n  setTypedMessage,\n  setEditing,\n  index\n}) => {\n  const {\n    text,\n    is_user\n  } = message;\n\n  const handleOnclick = e => {\n    if (message.is_user) {\n      //only allow update if it's user's message\n      setTypedMessage(message.text); //to edit message\n\n      console.log(message);\n      console.log(index); //dispatch action and send the edited message, active conversation id and message id\n\n      setEditing(index);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `chat ${is_user ? \"is-user\" : \"\"}`,\n    onClick: handleOnclick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, text), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"x\"));\n};\n\nconst mapStateToProps = state => {\n  return {\n    activeId: state.activeId,\n    messages: state.messages\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setTypedMessage,\n  setEditing\n})(ChatMessage);","map":{"version":3,"sources":["/Users/daranguyen/Desktop/UBC/Courses/CPSC436I/assignments/a2/MessageApp/message-app/src/containers/ChatMessage.js"],"names":["React","connect","setTypedMessage","setEditing","ChatMessage","messages","activeId","message","index","text","is_user","handleOnclick","e","console","log","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,EAA0BC,UAA1B,QAA4C,YAA5C,C,CACA;;AACA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,QADmB;AAEnBC,EAAAA,QAFmB;AAGnBC,EAAAA,OAHmB;AAInBL,EAAAA,eAJmB;AAKnBC,EAAAA,UALmB;AAMnBK,EAAAA;AANmB,CAAD,KAOd;AACJ,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBH,OAA1B;;AACA,QAAMI,aAAa,GAAIC,CAAD,IAAO;AAC3B,QAAIL,OAAO,CAACG,OAAZ,EAAqB;AACnB;AACAR,MAAAA,eAAe,CAACK,OAAO,CAACE,IAAT,CAAf,CAFmB,CAEY;;AAC/BI,MAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAJmB,CAKnB;;AACAL,MAAAA,UAAU,CAACK,KAAD,CAAV;AACD;AACF,GATD;;AAUA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAG,QAAOE,OAAO,GAAG,SAAH,GAAe,EAAG,EAD9C;AAEE,IAAA,OAAO,EAAEC,aAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGF,IAJH,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAPF,CADF;AAWD,CA9BD;;AA+BA,MAAMM,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLV,IAAAA,QAAQ,EAAEU,KAAK,CAACV,QADX;AAELD,IAAAA,QAAQ,EAAEW,KAAK,CAACX;AAFX,GAAP;AAID,CALD;;AAOA,eAAeJ,OAAO,CAACc,eAAD,EAAkB;AAAEb,EAAAA,eAAF;AAAmBC,EAAAA;AAAnB,CAAlB,CAAP,CACbC,WADa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setTypedMessage, setEditing } from \"../actions\";\n//parent: ChatMessages\nconst ChatMessage = ({\n  messages,\n  activeId,\n  message,\n  setTypedMessage,\n  setEditing,\n  index,\n}) => {\n  const { text, is_user } = message;\n  const handleOnclick = (e) => {\n    if (message.is_user) {\n      //only allow update if it's user's message\n      setTypedMessage(message.text); //to edit message\n      console.log(message);\n      console.log(index);\n      //dispatch action and send the edited message, active conversation id and message id\n      setEditing(index);\n    }\n  };\n  return (\n    <div>\n      <span\n        className={`chat ${is_user ? \"is-user\" : \"\"}`}\n        onClick={handleOnclick}\n      >\n        {text}\n      </span>\n      <span>x</span>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    activeId: state.activeId,\n    messages: state.messages,\n  };\n};\n\nexport default connect(mapStateToProps, { setTypedMessage, setEditing })(\n  ChatMessage\n);\n"]},"metadata":{},"sourceType":"module"}