{"ast":null,"code":"const createInitialReduxState = dataFromBackend => {\n  const accountOwner = dataFromBackend.users[0];\n  const conversations = dataFromBackend.conversations;\n  const messages = {\n    editing: {\n      isEditing: false,\n      editedMessageId: null\n    }\n  };\n\n  for (const c of conversations) {\n    messages[c.otherPerson] = [];\n\n    for (const m of c.messages) {\n      messages[c.otherPerson].push({\n        is_user: accountOwner._id === m.authorID,\n        text: m.message\n      });\n    }\n  }\n\n  const contacts = dataFromBackend.users.map(user => ({\n    user_id: user._id,\n    name: user.name,\n    pic: user.pic,\n    status: user.status,\n    details: user.details\n  }));\n  return {\n    activeId: null,\n    isTyping: false,\n    selectedContactId: null,\n    typedMessage: \"\",\n    user: {\n      user_id: accountOwner._id,\n      name: accountOwner.name,\n      pic: accountOwner.pic,\n      status: accountOwner.status,\n      details: accountOwner.details\n    },\n    messages,\n    contacts\n  };\n};\n/**\n *\n * @param {string} pic user.pic from user model\n */\n\n\nconst getProfilePicSrc = pic => {\n  return process.env.PUBLIC_URL + \"/profile_pics/\" + pic;\n};\n\nmodule.exports = {\n  createInitialReduxState,\n  getProfilePicSrc\n};","map":{"version":3,"sources":["/Users/daranguyen/Desktop/UBC/Courses/CPSC436I/assignments/a2/Message-App/message-app/client/src/utils/functions.js"],"names":["createInitialReduxState","dataFromBackend","accountOwner","users","conversations","messages","editing","isEditing","editedMessageId","c","otherPerson","m","push","is_user","_id","authorID","text","message","contacts","map","user","user_id","name","pic","status","details","activeId","isTyping","selectedContactId","typedMessage","getProfilePicSrc","process","env","PUBLIC_URL","module","exports"],"mappings":"AAAA,MAAMA,uBAAuB,GAAIC,eAAD,IAAqB;AACnD,QAAMC,YAAY,GAAGD,eAAe,CAACE,KAAhB,CAAsB,CAAtB,CAArB;AACA,QAAMC,aAAa,GAAGH,eAAe,CAACG,aAAtC;AACA,QAAMC,QAAQ,GAAG;AACfC,IAAAA,OAAO,EAAE;AACPC,MAAAA,SAAS,EAAE,KADJ;AAEPC,MAAAA,eAAe,EAAE;AAFV;AADM,GAAjB;;AAMA,OAAK,MAAMC,CAAX,IAAgBL,aAAhB,EAA+B;AAC7BC,IAAAA,QAAQ,CAACI,CAAC,CAACC,WAAH,CAAR,GAA0B,EAA1B;;AACA,SAAK,MAAMC,CAAX,IAAgBF,CAAC,CAACJ,QAAlB,EAA4B;AAC1BA,MAAAA,QAAQ,CAACI,CAAC,CAACC,WAAH,CAAR,CAAwBE,IAAxB,CAA6B;AAC3BC,QAAAA,OAAO,EAAEX,YAAY,CAACY,GAAb,KAAqBH,CAAC,CAACI,QADL;AAE3BC,QAAAA,IAAI,EAAEL,CAAC,CAACM;AAFmB,OAA7B;AAID;AACF;;AACD,QAAMC,QAAQ,GAAGjB,eAAe,CAACE,KAAhB,CAAsBgB,GAAtB,CAA2BC,IAAD,KAAW;AACpDC,IAAAA,OAAO,EAAED,IAAI,CAACN,GADsC;AAEpDQ,IAAAA,IAAI,EAAEF,IAAI,CAACE,IAFyC;AAGpDC,IAAAA,GAAG,EAAEH,IAAI,CAACG,GAH0C;AAIpDC,IAAAA,MAAM,EAAEJ,IAAI,CAACI,MAJuC;AAKpDC,IAAAA,OAAO,EAAEL,IAAI,CAACK;AALsC,GAAX,CAA1B,CAAjB;AAOA,SAAO;AACLC,IAAAA,QAAQ,EAAE,IADL;AAELC,IAAAA,QAAQ,EAAE,KAFL;AAGLC,IAAAA,iBAAiB,EAAE,IAHd;AAILC,IAAAA,YAAY,EAAE,EAJT;AAKLT,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAEnB,YAAY,CAACY,GADlB;AAEJQ,MAAAA,IAAI,EAAEpB,YAAY,CAACoB,IAFf;AAGJC,MAAAA,GAAG,EAAErB,YAAY,CAACqB,GAHd;AAIJC,MAAAA,MAAM,EAAEtB,YAAY,CAACsB,MAJjB;AAKJC,MAAAA,OAAO,EAAEvB,YAAY,CAACuB;AALlB,KALD;AAYLpB,IAAAA,QAZK;AAaLa,IAAAA;AAbK,GAAP;AAeD,CAxCD;AA0CA;;;;;;AAIA,MAAMY,gBAAgB,GAAIP,GAAD,IAAS;AAChC,SAAOQ,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,gBAAzB,GAA4CV,GAAnD;AACD,CAFD;;AAIAW,MAAM,CAACC,OAAP,GAAiB;AACfnC,EAAAA,uBADe;AAEf8B,EAAAA;AAFe,CAAjB","sourcesContent":["const createInitialReduxState = (dataFromBackend) => {\n  const accountOwner = dataFromBackend.users[0];\n  const conversations = dataFromBackend.conversations;\n  const messages = {\n    editing: {\n      isEditing: false,\n      editedMessageId: null,\n    },\n  };\n  for (const c of conversations) {\n    messages[c.otherPerson] = [];\n    for (const m of c.messages) {\n      messages[c.otherPerson].push({\n        is_user: accountOwner._id === m.authorID,\n        text: m.message,\n      });\n    }\n  }\n  const contacts = dataFromBackend.users.map((user) => ({\n    user_id: user._id,\n    name: user.name,\n    pic: user.pic,\n    status: user.status,\n    details: user.details,\n  }));\n  return {\n    activeId: null,\n    isTyping: false,\n    selectedContactId: null,\n    typedMessage: \"\",\n    user: {\n      user_id: accountOwner._id,\n      name: accountOwner.name,\n      pic: accountOwner.pic,\n      status: accountOwner.status,\n      details: accountOwner.details,\n    },\n    messages,\n    contacts,\n  };\n};\n\n/**\n *\n * @param {string} pic user.pic from user model\n */\nconst getProfilePicSrc = (pic) => {\n  return process.env.PUBLIC_URL + \"/profile_pics/\" + pic;\n};\n\nmodule.exports = {\n  createInitialReduxState,\n  getProfilePicSrc,\n};\n"]},"metadata":{},"sourceType":"module"}