{"ast":null,"code":"var _jsxFileName = \"/Users/daranguyen/Desktop/UBC/Courses/CPSC436I/assignments/a2/MessageApp/message-app/src/containers/ChatMessage.js\";\nimport React from \"react\";\nimport { useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setTypedMessage, setEditing, deleteMessage } from \"../actions\"; //parent: ChatMessages\n\nconst ChatMessage = ({\n  activeId,\n  message,\n  index,\n  setTypedMessage,\n  setEditing,\n  deleteMessage\n}) => {\n  const [isDeleteVisible, setDeleteVisible] = useState(false);\n  const {\n    text,\n    is_user\n  } = message;\n  const del = useRef(null);\n\n  const handleOnclick = e => {\n    if (e.currentTarget === del.current) {\n      return;\n    }\n\n    if (message.is_user) {\n      //only allow update if it's user's message\n      setTypedMessage(message.text); //to edit message\n\n      setEditing(index);\n    }\n  };\n\n  const handleHover = e => {\n    e.preventDefault();\n\n    if (message.is_user) {\n      setDeleteVisible(true);\n    }\n  };\n\n  const handleUnhover = e => {\n    e.preventDefault();\n\n    if (message.is_user) {\n      setDeleteVisible(false);\n    }\n  };\n\n  const handleDelete = e => {\n    e.preventDefault();\n\n    if (message.is_user) {\n      deleteMessage(index, activeId);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: `chat ${is_user ? \"is-user\" : \"\"}`,\n    onClick: handleOnclick,\n    onMouseEnter: handleHover,\n    onMouseLeave: handleUnhover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, text, isDeleteVisible ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"delete-btn\",\n    onClick: handleDelete,\n    ref: del,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"\\uD83D\\uDDD1\\uFE0F\") : null));\n};\n\nconst mapStateToProps = state => {\n  return {\n    activeId: state.activeId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setTypedMessage,\n  setEditing,\n  deleteMessage\n})(ChatMessage);","map":{"version":3,"sources":["/Users/daranguyen/Desktop/UBC/Courses/CPSC436I/assignments/a2/MessageApp/message-app/src/containers/ChatMessage.js"],"names":["React","useState","useRef","connect","setTypedMessage","setEditing","deleteMessage","ChatMessage","activeId","message","index","isDeleteVisible","setDeleteVisible","text","is_user","del","handleOnclick","e","currentTarget","current","handleHover","preventDefault","handleUnhover","handleDelete","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,EAA0BC,UAA1B,EAAsCC,aAAtC,QAA2D,YAA3D,C,CACA;;AACA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,QADmB;AAEnBC,EAAAA,OAFmB;AAGnBC,EAAAA,KAHmB;AAInBN,EAAAA,eAJmB;AAKnBC,EAAAA,UALmB;AAMnBC,EAAAA;AANmB,CAAD,KAOd;AACJ,QAAM,CAACK,eAAD,EAAkBC,gBAAlB,IAAsCX,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM;AAAEY,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBL,OAA1B;AACA,QAAMM,GAAG,GAAGb,MAAM,CAAC,IAAD,CAAlB;;AACA,QAAMc,aAAa,GAAIC,CAAD,IAAO;AAC3B,QAAIA,CAAC,CAACC,aAAF,KAAoBH,GAAG,CAACI,OAA5B,EAAqC;AACnC;AACD;;AACD,QAAIV,OAAO,CAACK,OAAZ,EAAqB;AACnB;AACAV,MAAAA,eAAe,CAACK,OAAO,CAACI,IAAT,CAAf,CAFmB,CAEY;;AAC/BR,MAAAA,UAAU,CAACK,KAAD,CAAV;AACD;AACF,GATD;;AAUA,QAAMU,WAAW,GAAIH,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAIZ,OAAO,CAACK,OAAZ,EAAqB;AACnBF,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD;AACF,GALD;;AAMA,QAAMU,aAAa,GAAIL,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAIZ,OAAO,CAACK,OAAZ,EAAqB;AACnBF,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,GALD;;AAOA,QAAMW,YAAY,GAAIN,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAIZ,OAAO,CAACK,OAAZ,EAAqB;AACnBR,MAAAA,aAAa,CAACI,KAAD,EAAQF,QAAR,CAAb;AACD;AACF,GALD;;AAMA,sBACE,uDACE;AACE,IAAA,SAAS,EAAG,QAAOM,OAAO,GAAG,SAAH,GAAe,EAAG,EAD9C;AAEE,IAAA,OAAO,EAAEE,aAFX;AAGE,IAAA,YAAY,EAAEI,WAHhB;AAIE,IAAA,YAAY,EAAEE,aAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGT,IANH,EAOGF,eAAe,gBACd;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAA+B,IAAA,OAAO,EAAEY,YAAxC;AAAsD,IAAA,GAAG,EAAER,GAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADc,GAIZ,IAXN,CADF,CADF;AAiBD,CAzDD;;AA0DA,MAAMS,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLjB,IAAAA,QAAQ,EAAEiB,KAAK,CAACjB;AADX,GAAP;AAGD,CAJD;;AAMA,eAAeL,OAAO,CAACqB,eAAD,EAAkB;AACtCpB,EAAAA,eADsC;AAEtCC,EAAAA,UAFsC;AAGtCC,EAAAA;AAHsC,CAAlB,CAAP,CAIZC,WAJY,CAAf","sourcesContent":["import React from \"react\";\nimport { useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setTypedMessage, setEditing, deleteMessage } from \"../actions\";\n//parent: ChatMessages\nconst ChatMessage = ({\n  activeId,\n  message,\n  index,\n  setTypedMessage,\n  setEditing,\n  deleteMessage,\n}) => {\n  const [isDeleteVisible, setDeleteVisible] = useState(false);\n  const { text, is_user } = message;\n  const del = useRef(null);\n  const handleOnclick = (e) => {\n    if (e.currentTarget === del.current) {\n      return;\n    }\n    if (message.is_user) {\n      //only allow update if it's user's message\n      setTypedMessage(message.text); //to edit message\n      setEditing(index);\n    }\n  };\n  const handleHover = (e) => {\n    e.preventDefault();\n    if (message.is_user) {\n      setDeleteVisible(true);\n    }\n  };\n  const handleUnhover = (e) => {\n    e.preventDefault();\n    if (message.is_user) {\n      setDeleteVisible(false);\n    }\n  };\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    if (message.is_user) {\n      deleteMessage(index, activeId);\n    }\n  };\n  return (\n    <>\n      <span\n        className={`chat ${is_user ? \"is-user\" : \"\"}`}\n        onClick={handleOnclick}\n        onMouseEnter={handleHover}\n        onMouseLeave={handleUnhover}\n      >\n        {text}\n        {isDeleteVisible ? (\n          <button className=\"delete-btn\" onClick={handleDelete} ref={del}>\n            🗑️\n          </button>\n        ) : null}\n      </span>\n    </>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    activeId: state.activeId,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setTypedMessage,\n  setEditing,\n  deleteMessage,\n})(ChatMessage);\n"]},"metadata":{},"sourceType":"module"}