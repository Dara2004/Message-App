{"ast":null,"code":"var _jsxFileName = \"/Users/daranguyen/Desktop/UBC/Courses/CPSC436I/assignments/a2/MessageApp/message-app/src/containers/ChatMessage.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setTypedMessage, setEditing } from \"../actions\"; //parent: ChatMessages\n\nconst ChatMessage = ({\n  messages,\n  activeId,\n  message,\n  setTypedMessage,\n  setEditing,\n  index\n}) => {\n  const [isDeleteVisible, setDeleteVisible] = useState(false);\n  const {\n    text,\n    is_user\n  } = message;\n\n  const handleOnclick = e => {\n    if (message.is_user) {\n      //only allow update if it's user's message\n      setTypedMessage(message.text); //to edit message\n\n      console.log(message);\n      console.log(index); //dispatch action and send the edited message, active conversation id and message id\n\n      setEditing(index);\n    }\n  };\n\n  const handleRightClick = e => {\n    e.preventDefault();\n    setDeleteVisible(true);\n\n    if (isDeleteVisible) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 14\n        }\n      }, \"Delete Message\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: `chat ${is_user ? \"is-user\" : \"\"}`,\n    onClick: handleOnclick,\n    onContextMenu: handleRightClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, text);\n};\n\nconst mapStateToProps = state => {\n  return {\n    activeId: state.activeId,\n    messages: state.messages\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setTypedMessage,\n  setEditing\n})(ChatMessage);","map":{"version":3,"sources":["/Users/daranguyen/Desktop/UBC/Courses/CPSC436I/assignments/a2/MessageApp/message-app/src/containers/ChatMessage.js"],"names":["React","useState","connect","setTypedMessage","setEditing","ChatMessage","messages","activeId","message","index","isDeleteVisible","setDeleteVisible","text","is_user","handleOnclick","e","console","log","handleRightClick","preventDefault","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,EAA0BC,UAA1B,QAA4C,YAA5C,C,CACA;;AACA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,QADmB;AAEnBC,EAAAA,QAFmB;AAGnBC,EAAAA,OAHmB;AAInBL,EAAAA,eAJmB;AAKnBC,EAAAA,UALmB;AAMnBK,EAAAA;AANmB,CAAD,KAOd;AACJ,QAAM,CAACC,eAAD,EAAkBC,gBAAlB,IAAsCV,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM;AAAEW,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBL,OAA1B;;AACA,QAAMM,aAAa,GAAIC,CAAD,IAAO;AAC3B,QAAIP,OAAO,CAACK,OAAZ,EAAqB;AACnB;AACAV,MAAAA,eAAe,CAACK,OAAO,CAACI,IAAT,CAAf,CAFmB,CAEY;;AAC/BI,MAAAA,OAAO,CAACC,GAAR,CAAYT,OAAZ;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ,EAJmB,CAKnB;;AACAL,MAAAA,UAAU,CAACK,KAAD,CAAV;AACD;AACF,GATD;;AAUA,QAAMS,gBAAgB,GAAIH,CAAD,IAAO;AAC9BA,IAAAA,CAAC,CAACI,cAAF;AACAR,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;;AACA,QAAID,eAAJ,EAAqB;AACnB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACD;AACF,GAND;;AAOA,sBACE;AACE,IAAA,SAAS,EAAG,QAAOG,OAAO,GAAG,SAAH,GAAe,EAAG,EAD9C;AAEE,IAAA,OAAO,EAAEC,aAFX;AAGE,IAAA,aAAa,EAAEI,gBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGN,IALH,CADF;AASD,CApCD;;AAqCA,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLd,IAAAA,QAAQ,EAAEc,KAAK,CAACd,QADX;AAELD,IAAAA,QAAQ,EAAEe,KAAK,CAACf;AAFX,GAAP;AAID,CALD;;AAOA,eAAeJ,OAAO,CAACkB,eAAD,EAAkB;AAAEjB,EAAAA,eAAF;AAAmBC,EAAAA;AAAnB,CAAlB,CAAP,CACbC,WADa,CAAf","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setTypedMessage, setEditing } from \"../actions\";\n//parent: ChatMessages\nconst ChatMessage = ({\n  messages,\n  activeId,\n  message,\n  setTypedMessage,\n  setEditing,\n  index,\n}) => {\n  const [isDeleteVisible, setDeleteVisible] = useState(false);\n  const { text, is_user } = message;\n  const handleOnclick = (e) => {\n    if (message.is_user) {\n      //only allow update if it's user's message\n      setTypedMessage(message.text); //to edit message\n      console.log(message);\n      console.log(index);\n      //dispatch action and send the edited message, active conversation id and message id\n      setEditing(index);\n    }\n  };\n  const handleRightClick = (e) => {\n    e.preventDefault();\n    setDeleteVisible(true);\n    if (isDeleteVisible) {\n      return <div>Delete Message</div>;\n    }\n  };\n  return (\n    <span\n      className={`chat ${is_user ? \"is-user\" : \"\"}`}\n      onClick={handleOnclick}\n      onContextMenu={handleRightClick}\n    >\n      {text}\n    </span>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    activeId: state.activeId,\n    messages: state.messages,\n  };\n};\n\nexport default connect(mapStateToProps, { setTypedMessage, setEditing })(\n  ChatMessage\n);\n"]},"metadata":{},"sourceType":"module"}