{"ast":null,"code":"import data from \"../data\";\n\nconst messages = (state = data.messages, action) => {\n  const existingMessages = state[action.messagseId];\n\n  switch (action.type) {\n    case \"SEND_MESSAGE\":\n      {\n        //create a new conversation if id is new\n        if (!existingMessages) {\n          return { ...state,\n            [action.id]: [{\n              is_user: true,\n              text: action.message,\n              edited: false\n            }]\n          };\n        } else {\n          //add message to existing conversation\n          return { ...state,\n            [action.id]: [...existingMessages, //preserve existing messages\n            {\n              is_user: true,\n              text: action.message,\n              edited: false\n            }]\n          };\n        }\n      }\n\n    case \"UPDATE_MESSAGE\":\n      {\n        //got from action: editedMessage, activeChatId, messageId\n        existingMessages[action.messageId].edited = true;\n        return { ...state,\n          [action.messageId]: [...existingMessages, {\n            is_user: true,\n            text: action.message,\n            edited: true\n          }]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default messages;","map":{"version":3,"sources":["/Users/daranguyen/Desktop/UBC/Courses/CPSC436I/assignments/a2/MessageApp/message-app/src/reducers/messages.js"],"names":["data","messages","state","action","existingMessages","messagseId","type","id","is_user","text","message","edited","messageId"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,KAAK,GAAGF,IAAI,CAACC,QAAd,EAAwBE,MAAxB,KAAmC;AAClD,QAAMC,gBAAgB,GAAGF,KAAK,CAACC,MAAM,CAACE,UAAR,CAA9B;;AACA,UAAQF,MAAM,CAACG,IAAf;AACE,SAAK,cAAL;AAAqB;AACnB;AACA,YAAI,CAACF,gBAAL,EAAuB;AACrB,iBAAO,EACL,GAAGF,KADE;AAEL,aAACC,MAAM,CAACI,EAAR,GAAa,CACX;AACEC,cAAAA,OAAO,EAAE,IADX;AAEEC,cAAAA,IAAI,EAAEN,MAAM,CAACO,OAFf;AAGEC,cAAAA,MAAM,EAAE;AAHV,aADW;AAFR,WAAP;AAUD,SAXD,MAWO;AACL;AACA,iBAAO,EACL,GAAGT,KADE;AAEL,aAACC,MAAM,CAACI,EAAR,GAAa,CACX,GAAGH,gBADQ,EACU;AACrB;AACEI,cAAAA,OAAO,EAAE,IADX;AAEEC,cAAAA,IAAI,EAAEN,MAAM,CAACO,OAFf;AAGEC,cAAAA,MAAM,EAAE;AAHV,aAFW;AAFR,WAAP;AAWD;AACF;;AACD,SAAK,gBAAL;AAAuB;AACrB;AACAP,QAAAA,gBAAgB,CAACD,MAAM,CAACS,SAAR,CAAhB,CAAmCD,MAAnC,GAA4C,IAA5C;AACA,eAAO,EACL,GAAGT,KADE;AAEL,WAACC,MAAM,CAACS,SAAR,GAAoB,CAClB,GAAGR,gBADe,EAElB;AACEI,YAAAA,OAAO,EAAE,IADX;AAEEC,YAAAA,IAAI,EAAEN,MAAM,CAACO,OAFf;AAGEC,YAAAA,MAAM,EAAE;AAHV,WAFkB;AAFf,SAAP;AAWD;;AACD;AACE,aAAOT,KAAP;AA7CJ;AA+CD,CAjDD;;AAmDA,eAAeD,QAAf","sourcesContent":["import data from \"../data\";\n\nconst messages = (state = data.messages, action) => {\n  const existingMessages = state[action.messagseId];\n  switch (action.type) {\n    case \"SEND_MESSAGE\": {\n      //create a new conversation if id is new\n      if (!existingMessages) {\n        return {\n          ...state,\n          [action.id]: [\n            {\n              is_user: true,\n              text: action.message,\n              edited: false,\n            },\n          ],\n        };\n      } else {\n        //add message to existing conversation\n        return {\n          ...state,\n          [action.id]: [\n            ...existingMessages, //preserve existing messages\n            {\n              is_user: true,\n              text: action.message,\n              edited: false,\n            },\n          ],\n        };\n      }\n    }\n    case \"UPDATE_MESSAGE\": {\n      //got from action: editedMessage, activeChatId, messageId\n      existingMessages[action.messageId].edited = true;\n      return {\n        ...state,\n        [action.messageId]: [\n          ...existingMessages,\n          {\n            is_user: true,\n            text: action.message,\n            edited: true,\n          },\n        ],\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default messages;\n"]},"metadata":{},"sourceType":"module"}